server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
ggplot(aes_string(x = input$x)) +
geom_histogram(position = "dodge", bins = 5, color = "black", fill = "orange", alpha = 0.8) +
labs(title = "Speed of Clownfish", x = "Speed (cm/sec)", y = "Frequency") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
radioButtons("x", "Select Clownfish Species", choices = unique(clownfish_endurance$species)),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
ggplot(aes_string(x = input$x)) +
geom_histogram(position = "dodge", bins = 5, color = "black", fill = "orange", alpha = 0.8) +
labs(title = "Speed of Clownfish", x = "Speed (cm/sec)", y = "Frequency") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
View(clownfish_endurance)
ui <- fluidPage(
radioButtons("x", "Speed of Clownfish", choices = unique(clownfish_endurance$speed), selected = "2"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
ggplot(aes_string(x = input$x)) +
geom_histogram(position="dodge",bins = 5, color = "black", fill = "orange", alpha = 0.8) +
labs(title = "Speed of Clownfish", x = "Speed (cm/sec)", y = "Frequency") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(ggthemes)
# Assuming you have the 'clownfish_endurance' data loaded
ui <- fluidPage(
titlePanel("Clownfish Speed Distribution"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
ggplot(aes(speed)) +
geom_histogram(bins = 5, color = "black", fill = "orange", alpha = 0.8) +
labs(title = "Speed of Clownfish", x = "Speed (cm/sec)", y = "Frequency") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
radioButtons("x", "Speed of Clownfish", choices = unique(clownfish_endurance$speed), selected = "2"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
ggplot(aes_string(x = input$x)) +
geom_histogram(position="dodge",bins = 5, color = "black", fill = "orange", alpha = 0.8) +
labs(title = "Speed of Clownfish", x = "Speed (cm/sec)", y = "Frequency") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Clownfish Density for Total Length"),
plotOutput("plot")
)
server <- function(input, output, session) {
clownfish_endurance %>%
filter(dist_cm != "NA") %>%
ggplot(aes(dist_cm)) +
geom_density(color = "black", fill = "purple3")
})
ui <- fluidPage(
titlePanel("Clownfish Density for Total Length"),
plotOutput("plot")
)
server <- function(input, output, session) {
clownfish_endurance %>%
filter(dist_cm != "NA") %>%
ggplot(aes(dist_cm)) +
geom_density(color = "black", fill = "purple3"))
ui <- fluidPage(
titlePanel("Clownfish Density for Total Length"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
filter(dist_cm != "NA") %>%
ggplot(aes(dist_cm)) +
geom_density(color = "black", fill = "purple3"))
library(shiny)
library(ggplot2)
# Assuming you have the 'clownfish_endurance' data loaded
ui <- fluidPage(
titlePanel("Clownfish Density for Total Length"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
filter(!is.na(dist_cm)) %>%
ggplot(aes(dist_cm)) +
geom_density(color = "black", fill = "purple3")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Clownfish Speed Distribution"),
sidebarLayout(
sidebarPanel(
sliderInput("speed_slider", "Adjust Speed:",
min = min(clownfish_endurance$speed, na.rm = TRUE),
max = max(clownfish_endurance$speed, na.rm = TRUE),
value = mean(clownfish_endurance$speed, na.rm = TRUE))
),
mainPanel(
plotOutput("plot")
)
)
)
server <- function(input, output, session) {
filtered_data <- reactive({
clownfish_endurance %>%
filter(!is.na(speed),
speed >= input$speed_slider - 1 & speed <= input$speed_slider + 1)
})
output$plot <- renderPlot({
ggplot(filtered_data(), aes(speed)) +
geom_histogram(bins = 5, color = "black", fill = "orange", alpha = 0.8) +
labs(title = "Speed of Clownfish", x = "Speed (cm/sec)", y = "Frequency") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
})
observe({
updateSliderInput(session, "speed_slider",
value = input$speed_slider,
min = min(clownfish_endurance$speed, na.rm = TRUE),
max = max(clownfish_endurance$speed, na.rm = TRUE))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Clownfish Speed Distribution"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
filter(tl != "NA") %>%
ggplot(aes(tl)) +
geom_density(fill= "orange", alpha = 0.7) +
theme_economist() +
labs(title = "Total Length of Clownfish", x = "Total Length (cm)", y = "Density")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Total Length of Clownfish"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
filter(tl != "NA") %>%
ggplot(aes(tl)) +
geom_density(fill= "orange", alpha = 0.7) +
theme_economist() +
labs(title = "Total Length of Clownfish", x = "Total Length (cm)", y = "Density")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Total Length of Clownfish"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
filter(dist_cm != "NA") %>%
ggplot(aes(x= log10(dist_cm), y=log10(time_sec), color = speed)) +
geom_point() +
theme_economist() +
labs(title = "Clownfish Endurance", x = "log10 Distance (cm)", y = "log10 Time (sec)", color = "Speed (cm/sec)") +
theme(legend.position = "right") +
theme(plot.title = element_text(hjust = 0.5))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Clownfish Distance vs. Time"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
filter(dist_cm != "NA") %>%
ggplot(aes(x= log10(dist_cm), y=log10(time_sec), color = speed)) +
geom_point() +
theme_economist() +
labs(title = "Clownfish Endurance", x = "log10 Distance (cm)", y = "log10 Time (sec)", color = "Speed (cm/sec)") +
theme(legend.position = "right") +
theme(plot.title = element_text(hjust = 0.5))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
#shinythemes::themeSelector(),  # <--- Add this somewhere in the UI
theme = shinytheme("cerulean"),
titlePanel("Log 10 Homerange by Taxon"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("taxon", " Select Taxon of Interest:", choices=unique(homerange$taxon)), hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
# create a spot for the barplot
mainPanel(
plotOutput("taxonPlot"))
)
)
# define a server for the Shiny app
server <- function(input, output, session) {
# this stops the app upon closing
session$onSessionEnded(stopApp)
# fill in the spot we created for a plot
output$taxonPlot <- renderPlot({
homerange %>%
filter(taxon == input$taxon) %>%
ggplot(aes(x=log10.hra)) +
geom_density(color="black", fill="steelblue", alpha=0.6)
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Clownfish"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_depth_mm"),
), # close the first box
box(title = "Plot of Penguins Data", width = 9,
plotOutput("plot", width = "800px", height = "600px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp) #automatically stop the app when we close it
output$plot <- renderPlot({
ggplot(data=penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point() +
theme_light()
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(ggthemes)
# Assuming you have the 'clownfish_endurance' data loaded
ui <- fluidPage(
titlePanel("Clownfish Speed Distribution"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
ggplot(aes(speed)) +
geom_histogram(bins = 5, color = "black", fill = "orange", alpha = 0.8) +
labs(title = "Speed of Clownfish", x = "Speed (cm/sec)", y = "Frequency") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Total Length of Clownfish"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
filter(tl != "NA") %>%
ggplot(aes(tl)) +
geom_density(fill= "orange", alpha = 0.7) +
theme_economist() +
labs(title = "Total Length of Clownfish", x = "Total Length (cm)", y = "Density")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Clownfish Distance vs. Time"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
filter(dist_cm != "NA") %>%
ggplot(aes(x= log10(dist_cm), y=log10(time_sec), color = speed)) +
geom_point() +
theme_economist() +
labs(title = "Clownfish Endurance", x = "log10 Distance (cm)", y = "log10 Time (sec)", color = "Speed (cm/sec)") +
theme(legend.position = "right") +
theme(plot.title = element_text(hjust = 0.5))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
# Assuming you have the 'clownfish_endurance' data loaded
ui <- fluidPage(
titlePanel("Clownfish Density for Total Length"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
filter(!is.na(dist_cm)) %>%
ggplot(aes(dist_cm)) +
geom_density(color = "black", fill = "purple3")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(ggthemes)
# Assuming you have the 'clownfish_endurance' data loaded
ui <- fluidPage(
titlePanel("Clownfish Speed Distribution"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
ggplot(aes(speed)) +
geom_histogram(bins = 5, color = "black", fill = "orange", alpha = 0.8) +
labs(title = "Speed of Clownfish", x = "Speed (cm/sec)", y = "Frequency") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
clownfish_endurance %>%
filter(tl != "NA") %>%
ggplot(aes(tl)) +
geom_density(fill= "orange", alpha = 0.7) +
theme_economist() +
labs(title = "Total Length of Clownfish", x = "Total Length (cm)", y = "Density") +
theme(plot.title = element_text(hjust = 0.5))
clownfish_endurance_2 %>%
select(dist_km, time_hr) %>%
mutate(speed_with_current = dist_km/time_hr + 7) %>%
mutate(days_to_sydney = (1860 / speed_with_current) / 24)  %>%
ggplot(aes(days_to_sydney)) +
geom_density(fill = "orange", alpha = 0.7) +
theme_economist() +
labs(title = "Time to Sydney with Current", x = "Time (Days)", y = "Density") +
theme(plot.title = element_text(hjust = 0.5))
clownfish_endurance_2 %>%
select(dist_km, time_hr) %>%
mutate(speed_km_hr = dist_km / time_hr) %>%
arrange(-dist_km)
clownfish_endurance_2 <- clownfish_endurance %>%
filter(dist_cm != "NA") %>%
select(speed, dist_cm, time_sec) %>%
mutate(dist_km = dist_cm / 100000) %>%
mutate(time_hr = time_sec / 3600) %>%
arrange(-dist_km)
# move graph legend to the left, title to the middle
clownfish_endurance %>%
filter(dist_cm != "NA") %>%
ggplot(aes(x= log10(dist_cm), y=log10(time_sec), color = speed)) +
geom_point() +
theme_economist() +
labs(title = "Clownfish Endurance", x = "Distance ( log10(cm) )", y = "Time ( log10(sec) )", color = "Speed (cm/sec)") +
theme(legend.position = "right") +
theme(plot.title = element_text(hjust = 0.5))
clownfish_endurance %>%
ggplot(aes(speed)) +
geom_histogram(bins = 5, color= "black", fill = "orange", alpha = 0.8) +
labs(title = "Speed of Clownfish", x = "Speed (cm/sec)", y = "Frequency") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ui <- fluidPage(
titlePanel("Clownfish Speed Distribution"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
ggplot(aes(speed)) +
geom_histogram(bins = 5, color = "black", fill = "orange", alpha = 0.8) +
labs(title = "Speed of Clownfish", x = "Speed (cm/sec)", y = "Frequency") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Clownfish Distance vs. Time"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
filter(dist_cm != "NA") %>%
ggplot(aes(x= log10(dist_cm), y=log10(time_sec), color = speed)) +
geom_point() +
theme_economist() +
labs(title = "Clownfish Endurance", x = "log10 Distance (cm)", y = "log10 Time (sec)", color = "Speed (cm/sec)") +
theme(legend.position = "right") +
theme(plot.title = element_text(hjust = 0.5))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Clownfish Distance vs. Time"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
filter(dist_cm != "NA") %>%
ggplot(aes(x= log10(dist_cm), y=log10(time_sec), color = speed)) +
geom_point() +
theme_economist() +
labs(title = "Clownfish Endurance", x = "log10 Distance (cm)", y = "log10 Time (sec)", color = "Speed (cm/sec)") +
theme(legend.position = "right") +
theme(plot.title = element_text(hjust = 0.5))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Total Length of Clownfish"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
filter(tl != "NA") %>%
ggplot(aes(tl)) +
geom_density(fill= "orange", alpha = 0.7) +
theme_economist() +
labs(title = "Total Length of Clownfish", x = "Total Length (cm)", y = "Density")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Clownfish Density for Total Length"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
filter(!is.na(dist_cm)) %>%
ggplot(aes(dist_cm)) +
geom_density(color = "black", fill = "purple3")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Clownfish Density for Total Length"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
clownfish_endurance %>%
filter(!is.na(dist_cm)) %>%
ggplot(aes(dist_cm)) +
geom_density(color = "black", fill = "purple3")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
View(clownfish_endurance_2)
