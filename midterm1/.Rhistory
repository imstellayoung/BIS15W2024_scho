library("tidyverse")
library("janitor")
wolves <- read.csv("data/NPS_wolfmortalitydata.csv", na = c("NULL")) %>% clean_names()
colnames(wolves)
glimpse(wolves)
summary(wolves)
View(wolves)
View(wolves)
wolves %>%
select(park)
knitr::opts_chunk$set(echo = TRUE)
fisheries_tidy %>%
count(country)
wolves %>%
count(park)
wolves %>%
filter(park) %>%
group_by(park) %>%
arrange(park)
wolves %>%
select(park) %>%
group_by(park) %>%
arrange(park)
wolves %>%
count(park, sort = T)
wolves %>%
group_by(park) %>%
arrange(park)
wolves %>%
filter(park) %>%
group_by(park) %>%
arrange(catch)
wolves %>%
group_by(park) %>%
arrange(catch)
wolves %>%
filter(park) %>%
group_by(park) %>%
arrange(park)
wolves %>%
group_by(park) %>%
arrange(park)
wolves %>%
names(park)
names(wolves$park)
wolves %>%
count(park, sort = T)
wolves %>%
group_by(mort_all) %>%
summarise(max_mort_all=max(mort_all, na.rm = TRUE)) %>%
arrange(desc(max_mort_all))
wolves %>%
select(park, mort_all) %>%
group_by(mort_all) %>%
summarise(max_mort_all=max(mort_all, na.rm = TRUE)) %>%
arrange(desc(max_mort_all))
wolves %>%
select(park, mort_all) %>%
group_by(mort_all) %>%
summarise(max_mort_all=max(mort_all, na.rm = TRUE)) %>%
arrange(desc(max_mort_all))
wolves %>%
select(park, mort_all) %>%
group_by(park) %>%
summarise(max_mort_all=max(mort_all, na.rm = TRUE)) %>%
arrange(desc(max_mort_all))
wolves %>%
group_by(park) %>%
summarise(max_mort_all=max(mort_all, na.rm = TRUE)) %>%
arrange(desc(max_mort_all))
wolves %>%
select(park, pack, mort_yn, mort_all)
group_by(park) %>%
summarise(max_mort_all=max(mort_all, na.rm = TRUE)) %>%
arrange(desc(max_mort_all))
wolves %>%
select(park, pack, mort_all)
wolves %>%
select(park, pack, mort_all) %>%
group_by(park)
wolves %>%
select(park, pack, mort_all) %>%
group_by(park) %>%
summarise(max_mort_all=max(mort_all))
arrange(mort_all
wolves %>%
wolves %>%
select(park, pack, mort_all) %>%
group_by(park)
wolves %>%
select(park, pack, mort_all) %>%
group_by(park) %>%
summarise(mort_all)
wolves %>%
select(park, pack, mort_all) %>%
group_by(park)
ynp <- wolves %>%
filter(park == "YNP")
ynp <- wolves %>%
filter(park == "YNP")
ynp
View(ynp)
ynp %>%
filter(pack == "druid")
?msleep
names(msleep)
library("palmerpenguins")
names(msleep)
msleep <- msleep #stores msleep as a new object, but this isn't necessary
msleep %>%
filter(bodywt<10)%>%
summarize(mean_sleep_sm=mean(sleep_total))
msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg=mean(sleep_total))
ynp %>%
filter(pack == "druid") %>%
summarise(mean_pack_size=mean(packsize_aug))
ynp %>%
filter(pack == "druid") %>%
summarise(mean_pack_size=mean(packsize_aug),
total=n())
ynp %>%
filter(pack == "druid")
wolves %>%
summarise(max_mort_all=max(mort_all),
total=n())
wolves %>%
filter(park) %>%
summarise(max_mort_all=max(mort_all),
total=n())
wolves %>%
select(park) %>%
summarise(max_mort_all=max(mort_all),
total=n())
wolves %>%
select(park, mort_all) %>%
summarise(max_mort_all=max(mort_all),
total=n())
tabyl(good_superhero, race)
tabyl(wolves, mort_all)
tabyl(wolves, pack, mort_all)
tabyl(wolves, pack, mort_all)
ynp %>%
filter(pack == "druid") %>%
arrange(packsize_aug)
ynp %>%
filter(pack == "druid") %>%
arrange(desc(packsize_aug)
ynp %>%
filter(pack == "druid") %>%
arrange(packsize_aug)
ynp %>%
select(park, persisty1)
group_by(park)
ynp %>%
select(park, persisty1) %>%
group_by(park)
ynp %>%
select(pack, persisty1) %>%
group_by(park)
ynp %>%
select(pack, persisty1) %>%
group_by(pack)
ynp %>%
select(pack, persisty1) %>%
group_by(pack) %>%
arrange(persisty1)
ynp %>%
select(pack, persisty1) %>%
group_by(pack) %>%
arrange(desc(persisty1))
ynp %>%
select(pack, persisty1) %>%
group_by(pack) %>%
summarize(catch=sum(catch, na.rm = TRUE)) %>%
arrange(desc(persisty1))
ynp %>%
select(pack, persisty1) %>%
group_by(pack) %>%
summarize(catch=sum(catch, na.rm = TRUE)) %>%
arrange(persisty1))
wolves %>%
filter(year >= 1990 & year <= 2000) %>%
filter(pack == "swan") %>%
arrange(desc(mort_lead))
wolves %>%
filter(biolyr >= 1990 & year <= 2000) %>%
filter(pack == "swan") %>%
arrange(desc(mort_lead))
wolves %>%
filter(pack == "swan") %>%
arrange(desc(mort_lead))
wolves %>%
filter(pack == "swan") %>%
mutate(mort_lead_to_mort_nonlead = mort_lead:mort_nonlead)
arrange(desc(mort_lead))
wolves %>%
filter(pack == "swan") %>%
mutate(mort_lead_to_mort_nonlead = mort_lead/mort_nonlead)
arrange(desc(mort_lead))
wolves %>%
filter(pack == "swan") %>%
arrange(desc(mort_lead))
wolves %>%
select(park, biolyr, pack. mort_lead)
wolves %>%
select(park, biolyr, pack, mort_lead)
filter(pack == "swan") %>%
arrange(desc(mort_lead))
wolves %>%
select(park, biolyr, pack, mort_lead) %>%
filter(pack == "swan") %>%
arrange(desc(mort_lead))
ynp %>%
select(pack, persisty1) %>%
group_by(pack) %>%
summarize(persisty1=sum(persisty1, na.rm = TRUE)) %>%
arrange(persisty1))
ynp %>%
select(pack, persisty1) %>%
group_by(pack) %>%
summarize(persisty1=sum(persisty1, na.rm = TRUE)) %>%
arrange(persisty1)
ynp %>%
select(pack, persisty1) %>%
group_by(pack) %>%
summarize(persisty1=sum(persisty1, na.rm = TRUE)) %>%
arrange(desc(persisty1))
wolves %>%
select(park, mort_all) %>%
group_by(park) %>%
summarize(mort_all=sum(mort_all, na.rm = TRUE)) %>%
arrange(desc(mort_all))
wolves %>%
select(park, pack, mort_all) %>%
group_by(park) %>%
summarize(mort_all=sum(mort_all, na.rm = TRUE)) %>%
arrange(desc(mort_all))
wolves %>%
select(park, mort_all) %>%
group_by(park) %>%
summarize(total_mort_all=sum(mort_all, na.rm = TRUE)) %>%
arrange(desc(total_mort_all))
wolves %>%
count(park)
wolves %>%
count(park, sort = T)
ynp <- wolves %>%
filter(park == "YNP")
ynp
ynp %>%
filter(pack == "druid")
ynp %>%
filter(pack == "druid") %>%
summarise(mean_pack_size=mean(packsize_aug),
total=n())
ynp %>%
filter(pack == "druid") %>%
arrange(packsize_aug)
ynp %>%
select(pack, persisty1) %>%
group_by(pack) %>%
summarize(persisty1=sum(persisty1, na.rm = TRUE)) %>%
arrange(desc(persisty1))
wolves %>%
select(park, biolyr, pack, mort_lead) %>%
filter(pack == "swan") %>%
arrange(desc(mort_lead))
ynp %>%
select(pack, persisty1) %>%
group_by(pack) %>%
summarize(total_persisty1=sum(persisty1, na.rm = TRUE)) %>%
arrange(desc(total_persisty1))
